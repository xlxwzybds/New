# Configuration file for Xeon X5550 Gainestown
# See http://en.wikipedia.org/wiki/Gainestown_(microprocessor)#Gainestown
# and http://ark.intel.com/products/37106

#include nehalem

[general]
total_cores = 4

[perf_model/core]
frequency = 3.6

[perf_model/l3_cache]
perfect = false
cache_block_size = 64
cache_size = 512
associativity = 16
address_hash = mask
replacement_policy = lru
data_access_time = 30 # 35 cycles total according to membench, +L1+L2 tag times
tags_access_time = 10
perf_model_type = parallel
writethrough = 0
shared_cores = 1

[perf_model/dram_directory]
# total_entries = number of entries per directory controller.
total_entries = 1048576
associativity = 16
directory_type = full_map

[perf_model/dram]
# -1 means that we have a number of distributed DRAM controllers (4 in this case)
num_controllers = 4
controllers_interleaving = 1
#controller_positions = "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
# DRAM access latency in nanoseconds. Should not include L1-LLC tag access time, directory access time (14 cycles = 5.2 ns),
# or network time [(cache line size + 2*{overhead=40}) / network bandwidth = 18 ns]
# Membench says 175 cycles @ 2.66 GHz = 66 ns total
latency = 29
per_controller_bandwidth = 7.6              # In GB/s, as measured by core_validation-dram
chips_per_dimm = 8
dimms_per_controller = 4

[network]
memory_model_1 = bus
memory_model_2 = bus

[network/bus]
bandwidth = 25.6 # in GB/s. Actually, it's 12.8 GB/s per direction and per connected chip pair
ignore_local_traffic = true # Memory controllers are on-chip, so traffic from core0 to dram0 does not use the QPI links

[log] 
enabled = false 
stack_trace = false 
disabled_modules = "" 
enabled_modules = "" 
mutex_trace = false
pin_codecache_trace = false

[memory]
num_channels = 16		    # total number of channels
num_banks = 128                     # total number of memory banks
bank_offset_in_pa = 6		    # bank address starts bank_offset_in_pa bits from LSB, least significant bits
bank_size = 64                      # in Mb, 64MB partition = 512Mb partition, 8MB partition = 64Mb partition.
#From CACTI3DD, 10,7.57,1.855*7 + 7.57 = 20.55........ Should be 15.15 nJ -> 3.7 pJ/bit 
energy_per_read_access = 20.55      # in nJ. 
energy_per_write_access = 20.55     # in nJ. 
energy_per_refresh_access = 3.55    # in nJ. 
t_refi  = 7.8                       # refresh interval time in uS
logic_core_power = 0.272            # in Watts (W), power per logic core
no_refesh_commands_in_t_refw = 8    # in Kilo, 8K refresh commands are issued in a refresh window, one in each interval    
banks_in_x = 4                      # total banks in x-dimension
banks_in_y = 4                      # total banks in y-dimension
banks_in_z = 8                      # total banks in z-dimension (layers)
cores_in_x = 2                      # total cores in x-dimension
cores_in_y = 2                      # total cores in y-dimension
cores_in_z = 1                      # total cores in z-dimension (layers)
type_of_stack = 3Dmem                  #DDR, 3Dmem, 2.5D, 3D
channel_partitioning = 1
epoch_time = 1000

#depending upon the arch. either one (core+memory) or two (separate for core and memory) instances of hotspot are invoked.
[hotspot]
tool_path = hotspot_tool/           #tool path, relative to the SNIPER ROOT
floorplan_folder  = config/hotspot/3Dmem_subcore     # the folder in which various floorplans are stored. This folder is required to be present in the run directory as hotspot uses relative path in lcf
sampling_interval = 1000000     # in ns. Time epoch for invoking hotspot (same interval for both core and memory)

#for memory/combined cases
init_file_external_mem = config/hotspot/3Dmem_subcore/mem.init  #The external init for to initialize temperature of different blocks. If init file not needed, say None
hotspot_config_file_mem  =  config/hotspot/3Dmem_subcore/mem_hotspot.config      #hotspot configuration file for memory. relative to sniper_root
layer_file_mem  =   config/hotspot/3Dmem_subcore/mem.lcf    #hotspot lcf file for the memory. relative to sniper_root

#for core (only used for DDR and 3Dmem)
init_file_external_core = config/hotspot/3Dmem_subcore/cores.init  #The external init for to initialize temperature of different blocks. If init file not needed, say None
hotspot_config_file_core  =  config/hotspot/3Dmem_subcore/cores_hotspot.config      #hotspot configuration file for core.
layer_file_core  =   config/hotspot/3Dmem_subcore/cores.lcf   #hotspot lcf file for the core


# Output Parameters for hotspot simulation
#default file names, no need to change by user.
[hotspot/log_files]
combined_power_trace_file = combined_power.trace        #combined core and memory power trace for entire simulation
combined_instpower_trace_file = combined_instpower.trace #combined core and memory power trace for last epoch
combined_temperature_trace_file = combined_temperature.trace #combined core and memory temperature trace for entire simulation
combined_insttemperature_trace_file = combined_insttemperature.trace #combined core and memory temperature trace for last epoch

#during 3D/2.5D, when only one hotspot is used, the memory related file names take effect.
[hotspot/log_files_mem]
power_trace_file = power_mem.trace          #memory power trace for last epoch
full_power_trace_file = full_power_mem.trace            #memory power trace for entire simulation
temperature_trace_file = temperature_mem.trace          #memory temperature trace for last epoch
full_temperature_trace_file = full_temperature_mem.trace            #memory temperature trace for entire simulation
init_file = temperature_mem.init                #init file name to be used by the tool (internal usage of tool)
all_transient_file = all_transient_mem.init     #output init file dumped by tool, for use in next iteration
steady_temp_file = steady_temperature_mem.log   #steady state temperature log for memory
grid_steady_file = grid_steady_mem.log          #grid steady log file for memory

#for core (only used for DDR and 3Dmem)
[hotspot/log_files_core]
power_trace_file = power_core.trace
full_power_trace_file = full_power_core.trace
temperature_trace_file = temperature_core.trace
full_temperature_trace_file = full_temperature_core.trace
init_file = temperature_core.init
all_transient_file = all_transient_core.init
steady_temp_file = steady_temperature_core.log
grid_steady_file = grid_steady_core.log

